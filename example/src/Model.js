// Auto-generated by https://github.com/react-spring/gltfjsx
// GLTF made by Mr. The Rich: https://sketchfab.com/3d-models/thor-and-the-midgard-serpent-2ef4c45caa35450db1b876a7f94ff79d

import React, { useEffect, useRef, useMemo, useState } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials } = useLoader(GLTFLoader, '/scene_draco.glb', loader => {
    const dracoLoader = new DRACOLoader()
    dracoLoader.setDecoderPath('/draco-gltf/')
    loader.setDRACOLoader(dracoLoader)
  })

  const [hovered, setHovered] = useState()
  const [active, setActive] = useState()
  useEffect(() => void (document.body.style.cursor = hovered ? 'pointer' : 'auto'), [hovered])

  return (
    <group ref={group} {...props} dispose={null}>
      <object3D rotation={[-Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>
        <object3D rotation={[Math.PI / 2, 0, 0]}>
          <object3D rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 100]}>
            <mesh geometry={nodes['Circle011_EyeFire_0'].geometry}>
              <meshBasicMaterial attach="material" color="yellow" />
            </mesh>
            <mesh
              onClick={() => setActive(!active)}
              onPointerOver={() => setHovered(true)}
              onPointerOut={() => setHovered(false)}
              material={materials['SerpentBake']}
              geometry={nodes['Circle011_SerpentBake_0'].geometry}
              material-metalness={active ? 1 : 0.5}
            />
          </object3D>
          <object3D position={[-1018.2, -380.5, 1332.6]} rotation={[-1, 0.72, -0.08]} scale={[100, 100, 100]}>
            <mesh geometry={nodes['Hide003_EyeFire_0'].geometry}>
              <meshBasicMaterial attach="material" color="white" />
            </mesh>
            <mesh material={materials['Boat2Bake']} geometry={nodes['Hide003_Boat2Bake_0'].geometry} />
          </object3D>
          <object3D position={[349.5, 32.3, 176.6]} rotation={[-1.72, -0.23, -2.64]} scale={[100, 100, 100]}>
            <mesh geometry={nodes['Keel002_EyeFire_0'].geometry}>
              <meshBasicMaterial attach="material" color="white" />
            </mesh>
            <mesh material={materials['Boat1Bake']} geometry={nodes['Keel002_Boat1Bake_0'].geometry} />
          </object3D>
          <object3D position={[0, 27, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 170]}></object3D>
          <object3D rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 100]}>
            <mesh
              material={materials['RockBake']}
              geometry={nodes['Rock021_RockBake_0'].geometry}
              material-metalness={0.5}
            />
          </object3D>
          <object3D scale={[100, 100, 100]}>
            <mesh material={materials['Objects']} geometry={nodes['VikingShipObjects001_Objects_0'].geometry} />
            <mesh material={materials['Objects']} geometry={nodes['VikingShipObjects001_Objects_0001'].geometry} />
          </object3D>
        </object3D>
      </object3D>
    </group>
  )
}
